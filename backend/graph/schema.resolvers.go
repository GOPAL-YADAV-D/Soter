package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.80

import (
	"context"
	"fmt"

	"github.com/GOPAL-YADAV-D/Soter/graph/generated"
	"github.com/GOPAL-YADAV-D/Soter/graph/model"
	"github.com/GOPAL-YADAV-D/Soter/internal/models"
	"github.com/google/uuid"
)

// Register is the resolver for the register field.
func (r *mutationResolver) Register(ctx context.Context, input model.RegisterInput) (*model.AuthPayload, error) {
	panic(fmt.Errorf("not implemented: Register - register"))
}

// Login is the resolver for the login field.
func (r *mutationResolver) Login(ctx context.Context, input model.LoginInput) (*model.AuthPayload, error) {
	panic(fmt.Errorf("not implemented: Login - login"))
}

// Logout is the resolver for the logout field.
func (r *mutationResolver) Logout(ctx context.Context) (bool, error) {
	panic(fmt.Errorf("not implemented: Logout - logout"))
}

// CreateUploadSession is the resolver for the createUploadSession field.
func (r *mutationResolver) CreateUploadSession(ctx context.Context, input models.UploadSessionInput) (*models.UploadSession, error) {
	panic(fmt.Errorf("not implemented: CreateUploadSession - createUploadSession"))
}

// CompleteUploadSession is the resolver for the completeUploadSession field.
func (r *mutationResolver) CompleteUploadSession(ctx context.Context, sessionToken string) (bool, error) {
	panic(fmt.Errorf("not implemented: CompleteUploadSession - completeUploadSession"))
}

// DeleteFile is the resolver for the deleteFile field.
func (r *mutationResolver) DeleteFile(ctx context.Context, userFileID uuid.UUID) (bool, error) {
	panic(fmt.Errorf("not implemented: DeleteFile - deleteFile"))
}

// Me is the resolver for the me field.
func (r *queryResolver) Me(ctx context.Context) (*models.User, error) {
	panic(fmt.Errorf("not implemented: Me - me"))
}

// User is the resolver for the user field.
func (r *queryResolver) User(ctx context.Context, id uuid.UUID) (*models.User, error) {
	panic(fmt.Errorf("not implemented: User - user"))
}

// UserFiles is the resolver for the userFiles field.
func (r *queryResolver) UserFiles(ctx context.Context, folderPath *string, limit *int, offset *int) ([]*models.UserFile, error) {
	panic(fmt.Errorf("not implemented: UserFiles - userFiles"))
}

// UserFile is the resolver for the userFile field.
func (r *queryResolver) UserFile(ctx context.Context, id uuid.UUID) (*models.UserFile, error) {
	panic(fmt.Errorf("not implemented: UserFile - userFile"))
}

// UploadProgress is the resolver for the uploadProgress field.
func (r *queryResolver) UploadProgress(ctx context.Context, sessionToken string) (*models.UploadProgress, error) {
	panic(fmt.Errorf("not implemented: UploadProgress - uploadProgress"))
}

// UploadSession is the resolver for the uploadSession field.
func (r *queryResolver) UploadSession(ctx context.Context, sessionToken string) (*models.UploadSession, error) {
	panic(fmt.Errorf("not implemented: UploadSession - uploadSession"))
}

// StorageStats is the resolver for the storageStats field.
func (r *queryResolver) StorageStats(ctx context.Context) (*models.UserStorageStats, error) {
	panic(fmt.Errorf("not implemented: StorageStats - storageStats"))
}

// FirstName is the resolver for the firstName field.
func (r *userResolver) FirstName(ctx context.Context, obj *models.User) (string, error) {
	panic(fmt.Errorf("not implemented: FirstName - firstName"))
}

// LastName is the resolver for the lastName field.
func (r *userResolver) LastName(ctx context.Context, obj *models.User) (string, error) {
	panic(fmt.Errorf("not implemented: LastName - lastName"))
}

// StorageStats is the resolver for the storageStats field.
func (r *userResolver) StorageStats(ctx context.Context, obj *models.User) (*models.UserStorageStats, error) {
	panic(fmt.Errorf("not implemented: StorageStats - storageStats"))
}

// Mutation returns generated.MutationResolver implementation.
func (r *Resolver) Mutation() generated.MutationResolver { return &mutationResolver{r} }

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

// User returns generated.UserResolver implementation.
func (r *Resolver) User() generated.UserResolver { return &userResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
type userResolver struct{ *Resolver }
